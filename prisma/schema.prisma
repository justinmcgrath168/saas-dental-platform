generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Tenant {
  id           String   @id @default(cuid())
  name         String
  subdomain    String   @unique
  logoUrl      String?
  primaryColor String?  @default("#2563eb")
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Subscription {
  id               String    @id @default(cuid())
  tenantId         String
  planType         PlanType
  startDate        DateTime
  endDate          DateTime?
  isActive         Boolean   @default(true)
  paymentMethod    String?
  paymentReference String?
  autoRenew        Boolean   @default(true)
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
}

model Organization {
  id        String   @id @default(cuid())
  tenantId  String
  name      String
  type      OrgType
  address   String?
  city      String?
  state     String?
  zipCode   String?
  country   String?  @default("US")
  phone     String?
  email     String?
  website   String?
  taxId     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Location {
  id             String   @id @default(cuid())
  organizationId String
  name           String
  address        String
  city           String
  state          String
  zipCode        String
  country        String   @default("US")
  phone          String?
  email          String?
  isMain         Boolean  @default(false)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model User {
  id             String    @id @default(cuid())
  name           String?
  email          String    @unique
  emailVerified  DateTime?
  password       String?
  image          String?
  organizationId String
  role           UserRole
  isActive       Boolean   @default(true)
  lastLogin      DateTime?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
}

model UserLocation {
  id         String  @id @default(cuid())
  userId     String
  locationId String
  isPrimary  Boolean @default(false)

  @@unique([userId, locationId])
}

model Permission {
  id          String  @id @default(cuid())
  code        String  @unique
  name        String
  description String?
  module      String
}

model UserPermission {
  id           String  @id @default(cuid())
  userId       String
  permissionId String
  granted      Boolean @default(true)

  @@unique([userId, permissionId])
}

enum PlanType {
  FREE
  STARTER
  PROFESSIONAL
  ENTERPRISE
  CUSTOM
}

enum OrgType {
  DENTAL_CLINIC
  DENTAL_LAB
  IMAGING_CENTER
  SUPPLIER
}

enum UserRole {
  SUPER_ADMIN
  TENANT_ADMIN
  ORG_ADMIN
  LOCATION_ADMIN
  DENTIST
  HYGIENIST
  ASSISTANT
  FRONT_DESK
  LAB_MANAGER
  LAB_TECHNICIAN
  RADIOLOGIST
  IMAGING_TECH
  INVENTORY_MANAGER
  ACCOUNTING
  PATIENT
}
